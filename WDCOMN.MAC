	.RADIX 16
	.ASECT
	.ENABL AMA
	.SBTTL EQUATES
;********************
;*		    *
;*	WDCOMN	    *
;*	   - GREG R *
;*		    *
;********************
	.GLOBL	MOOLAH,IRQ,RESET,START,SNDON,PK.SND,MODSND,DRAGON,DGLAUNCH
			;
RAM	=0		;0-FFF, 1K QUAD MAPPED
SCRFLD	=400		;32 "COLUMNS" X 30 CHARS:SCREEN FIELD
			;
SCRMES	=400+1F0	;START OF MIDDLE LINE OF SCREEN-FOR MESSAGES
SCRNMB	=7*32.+SCRMES
SCRNMT	=-7*32.+SCRMES-33.
MOTNUM	=12.
M.BASE	=7C0		;DMA LOC FOR MOTION OBJ
M.HPICT	=M.BASE
M.VPOS	=M.BASE+16.
M.HPOS	=M.BASE+32.
M.COL	=M.BASE+48.
			;
			;
			;;---
P.BASE	=1000		;POKEY
P.AFRQ1	=P.BASE+0	;POKEY BASE FREQUENCY
P.INIT	=P.BASE+0F	;SKCTL CYCLE 0,3 TO INIT
P.RNDM	=P.BASE+0A	;RANDOM
P.ACTL	=P.BASE+08	;AUDCTL
P.POT	=P.BASE+0
P.POTG	=P.BASE+0B
;---
PROG	=5000		;12K OF PROGRAM, ENDING AT 7FFF
WTCHDG	=4000		;WATCHDOG
INTACK	=1800		;INTTERUPT ACKNOWLEDGE-
			;---
				;D7=0==> OFF,D7=1==> ON
W.CTR1	=1C00			;COIN COUNTER 1
W.CTR2	=1C01			;COIN COUNTER 2
W.CTR3	=1C02			;COIN COUNTER 3
W.LED1	=1C03			;LED-START PLAYER 1
W.LED2	=1C04			;LED PLAYER 2
W.LED3	=1C05			;LED PLAYER 3
W.LED4	=1C06			;LED PLAYER 4
R.BYT0	=800			;READ BYTE INPUT
R.BYT1	=801
R.BYT2	=0C00
R.BYT3	=0C01
R.VBLNK	=0C00		;VBLANK IF D6 SET (IFVS)
R.TEST	=0C00			;TEST ON IF D5 CLEAR
R.SLAM	=0C01			;SLAM ON IF D4 CLEAR
R.COIN	=0C01			;COINS IN D7,D6,D5
R.FLIP	=0C00		;D7 SAYS FLIP (=1) MIRROR
	.SBTTL ZERO PAGE
	.=0
GARBGE:	.BLKB 1
INPUT:	.BLKB 4		;INPUT
DBSW:	.BLKB 4			;DE-BOUNCE SAVE WORD
SWSTAT:	.BLKB 4			;SWITCH STATUS
$INTCT:	.BLKB 1		;COUNT OF INTERRUPTS
$COINA	=R.COIN		;COINS IN D5,D6,D7
$LAM	=R.SLAM		;SLAM
$LMBIT	=10		;IN BIT D4
$CMODE	=SWSTAT+1
;FOLLOWING LOCATIONS USED BY COIN ROUTINE
$CCTIM:	.BLKB 3		;COIN CTR PULSE TIMER
$$CRDT:	.BLKB 1
$BC:	.BLKB 1
$BCCNT:	.BLKB 1
$CNCT:	.BLKB 1		;COIN COUNT
$PSTSL:	.BLKB 3		;POST-COIN SLAM TIMER
$CNSTT:	.BLKB 3		;COIN SW STATUS
$LMTIM:	.BLKB 1		;PRE-COIN SLAM TIMER
				;---
				;POTS
PT.INT:	.BLKB 1
PT.CTR:	.BLKB 4
BITTST:			;---
TPADSW:			;BIT TEST
BIT01:	.BLKB 1
BIT02:	.BLKB 1
BIT04:	.BLKB 1
BIT08:	.BLKB 1
SYNC:	.BLKB 1		;SET TO 1 ONCE PER FRAME (3 FIELDS)
			;---
IJ:	.BLKB 1
FIELD:	.BLKB 1
				;----
				;POKEY SOUND GENERATOR
PK.MAX	=8
PK.PNT:	.BLKB PK.MAX
PK.FRM:	.BLKB PK.MAX
PK.CNT:	.BLKB PK.MAX
PK.CUR:	.BLKB PK.MAX
			;---
ADL:	.BLKB 1		;ADDRESS PTR (TO SCROLL FIELD)
ADH:	.BLKB 1
AD2L:	.BLKB 1
AD2H:	.BLKB 1

			;----
L:	.BLKB 1		;BUCKET FOR MAINLINE.
	
J:	.BLKB 1		;BUCKET FOR MAINLINE
ATRACT:	.BLKB 1		;ZERO==> ATTRACT
			;NON ZERO==> GAME MODE
PLAYER:	.BLKB 1		;PLAYER ACTIVE
PHASE:	.BLKB 1		;STATE OF GAME; SELECT, PLAY, OR PAUSE
;---
;PHASE VARIABLES
PH1EDG:
PAUSTM:	.BLKB 1
PH2TRG:
PAUSPH:	.BLKB 1
FRAME:	.BLKB 2		;COUNT FRAMES
K:	.BLKB 1		;TEMP FOR MAINLINE
	

			;---
			;DRAW SCREEN
			;NOTE: SHARES WITH MESSAGES
DR.RNM:	.BLKB 1		;ROW #, COUNTS DOWN
DR.CNM:	.BLKB 1		;# OF COLUMNS-CONSTANT
DR.CLM:	.BLKB 1		;OFFSET # TO NEXT COLUMN CHAR=1,-1
DR.ROW:	.BLKB 1		;OFFSET TO NEXT ROW
DR.FLP:	.BLKB 1		;FLIP BITS
			;----
			;EXPLOSION
;---
;MESSAGES
MS.MSK	=J			;MASK, D7=TOP MESSAGE D6=BOTTOM MESSAGE
MS.CNT	=L			;CHARACTER COUNTER
MS.NUM:	.BLKB 1			;NUMBER OF CHARS TO OUTPUT
MS.TRM	=K			;PHRASE TERMINATOR
MS.PHR	=DR.RNM			;2 BYTES
MS.KAR	=DR.CLM			;2 BYTES
XP.FLG:	.BLKB 4
XP.TIM:	.BLKB 4
				;SOUND
				;---
				;COLLISION
CL.BNM:	.BLKB 1			;BALL NUMBER
CL.PNM:	.BLKB 1			;PADDLE NUMBER
CL.PDL:	.BLKB 1			;PADDLE LOC VALUE
CL.BLX:	.BLKB 1			;BALL X COORD
CL.BLY:	.BLKB 1			;BALL Y COORD
CL.TST:	.BLKB 1 ;TEST FOR POTENTIAL COLLISIONS
SC.CNT:	.BLKB 1	;---SCREEN BRICK COUNT
VPOS:
VPOSL:	.BLKB MOTNUM
VPOSH:	.BLKB MOTNUM
HPOS:
HPOSL:	.BLKB MOTNUM
HPOSH:	.BLKB MOTNUM
SPIC:	.BLKB MOTNUM	;STAMP PICTURES
SVBPIC:	.BLKB MOTNUM
				;---
				;BALL
BL.PIC	=SPIC+<4>
BL.PX	=HPOS+<4>		;POSITION, X HORIZ
BL.PXL	=BL.PX			;X HORIZ LOW
BL.PXH	=BL.PX+MOTNUM		;X HORIZ HI
BL.PY	=VPOS+<4>		;POSITION, Y VERT
BL.PYL	=BL.PY			;Y VERT LOW
BL.PYH	=BL.PY+MOTNUM		;Y VERT HI
BL.NUM	=4			;# OF BALLS
BL.VX:				;VELOLCITY X HOIRZ
BL.VXL:	.BLKB BL.NUM			;X HORIZ LOW
BL.VXH:	.BLKB BL.NUM		;X HORIZ HI
BL.VY:				;VELOCITY Y VERT
BL.VYL:	.BLKB BL.NUM		;Y VERT LOW
BL.VYH:	.BLKB BL.NUM		;Y VERT HI
BL.VXB:	.BLKB BL.NUM		;VELOCITY, X HORIZ BASE, ONES COMPLEMENT, SIGNED 128THS
BL.VYB:	.BLKB BL.NUM		;VELOCITY Y VERT BASE, ONES COMPLEMENT, SIGNED 128THS
BL.FLG:	.BLKB BL.NUM			;FLAGS
				;D0-D1:OWNER OF BALL
				;D2:OWNED BY A PADDLE-SEE D1,D2
				;D3: HELD BY PADDLE-SEE D1,D2
				;D4: BALL ALIVE
				;D5: SPARE
				;D6: READY FOR COLLISION WITH PADDLE
				;D7: READY FOR COLLISION WITH SCREEN OBJECT
BL.FL2:	.BLKB BL.NUM		;D0-D2:SPEED OF BALL MULTIPLIER
				;D3:=WHIZ ON-TEMPORARY FAST SPEED
				;D4: BALL ALIVE
				;D7:BREAKOUT MODE
				;---
				;FLAMES
FL.PXH=BL.PXH+<BL.NUM>
FL.PYH=BL.PYH+<BL.NUM>
FL.PIC=BL.PIC+<BL.NUM>
				;---
				;DRIZZLE
DZ.VX	=BL.VXH			;VELOCITY
DZ.VY	=BL.VYH
DZ.CNT	=BL.PXL			;DESTROY COUNTDOWN
DZ.PIC	=BL.PYL			;PICTURE STAMP
DZ.PX	=BL.VXL			;POSITION
DZ.PY	=BL.VYL	
				;---
				;MVPAD
PD.IN1:	.BLKB 1			;PADDLE INPUT #1
PD.IN2:	.BLKB 1			;#2
PD.IN3:	.BLKB 1			;#3
PD.IN4:	.BLKB 1			;#4
PD.FLG:	.BLKB 4
			;D0-D1:# OF BALL
			;D3:HOLDING A BALL-SEE D0,D1
			;D4: CASTLE ALIVE
			;D6: PADDLE VISIBLE
			;D7: CASTLE READY TO DIE
	
PD.PIC	=SPIC		;PADDLE PICTURE
PD.PX1	=HPOSH
PD.PY1	=VPOSH
PD.PX2	=PD.PX1+1
PD.PY2	=PD.PY1+1
PD.PX3	=PD.PX1+2
PD.PY3	=PD.PY1+2
PD.PX4	=PD.PX1+3
PD.PY4	=PD.PY1+3

			;***
			; RIPOFF PROTECT
RIP.A: .BLKB 1		; GOOD=13, ELSE (<>13) RIPOFF.
			;***
;---
;COMPUTER CONTROLLED PADDLE
;ANY INTEREST DETECTED
;Y INTERCEPT FOUND
;X INTERCEPT FOUND
;DESIRED PADDLE LOC
;POINT1,X
;POINT1,Y
;POINT2,X
;POINT2,Y
;INTERCEPT LOOP-POINT1,X
;	       -POINT1,Y
;	       -POINT2,X
;	       -POINT2,Y
CP.PDC:	.BLKB 4			;SET OF 4-PADDLE CENTER
CP.MXS:	.BLKB 1			;MAXIMUM SPEED
CP.INY:	.BLKB 1
CP.INX:	.BLKB 1
CP.DPD:	.BLKB 1
				;FUDGE FACTOR-NEAR MISSES
CP.PX1:	.BLKB 1
CP.PY1:	.BLKB 1
CP.PX2:	.BLKB 1
CP.PY2:	.BLKB 1
CP.IX1:	.BLKB 1
CP.IY1:	.BLKB 1
CP.IX2:	.BLKB 1
CP.IY2:	.BLKB 1
CP.DIS:	.BLKB 1		;DISTANCE TO CURRENT BALL
CP.DSS:	.BLKB 1			;DRONE SLEW SPEED
CP.PHC:	.BLKB 1			;PLAYER HIT COUNTER
CP.PHN:	.BLKB 1			;PLAYER HIT NUMBER
CP.DRH:	.BLKB 1			;DRONE HITS THIS FRAMEM BY PLAYER
CP.PLH:	.BLKB 1			;PLAYER HITS THIS FRAME
CP.PDP:	.BLKB 1			;DRONE PADDLE HIT BY PLAYER BALL
	.MACRO .DISP ...1,...2
	...1=.DISP.
	.DISP.=.DISP.+...2
	.ENDM
	
	
	
	.DISP.=CP.PDC
				;HI SCORE
	.DISP HS.PLN 1		;PLAYER NUMBER
	.DISP HS.CNT 1		;CHARACTER COUNTDOWN
	.DISP HS.CPS 1		;CHARACTER POSTION
	.DISP HS.SWO 1		;OLD SWITCH VALUE
	.DISP HS.ADL 1		;ADDRESS POINTER-LOW
	.DISP HS.ADH 1		;ADDRESS POINTER-HI
	.DISP HS.TIM 1		;TIMER TIMEOUT
	
	.DISP HS.DHI 1		;(0)DRAW 1 PLAYER
				;(<>0)DRAW TWO PLAYER
	.DISP	HS.HYS 1	;INPUT, HYSTERISIS
	.=.-1
HS.CHR:	.BLKB 10.		;CHARACTER STRING
O$CNCT:	.BLKB 1			;OLD COIN CNT
EOZP:			;END-OF-ZERO-PAGE
	.SBTTL MISC.(NON-ZERO-PAGE) RAM
	.=100
				;---
HORDIS:	.BLKB 16.	;HORIZONTAL DISPLAY POSITION.
VERDIS:	.BLKB 16.		;VERTICAL DISPLAY POSITION.
ABUSE:	.BLKB 1		;ABUSE ALARM TIMER
				;---
SCORE:	.BLKB 21		;SCORE BYTES. INDEXED BY 1, 3 BYTES EACH
SCOR12=SCORE			;LOW DIGITS 1,2
SCOR34=SCORE+7			;MIDDLE DIGITS 3,4
SCOR56=SCORE+14		;HIGH DIGITS 5,6
SBUK12:	.BLKB 4		;BUCKET FOR ADDING SCORES
SBUK34:	.BLKB 4
				;---
				;LIVES
LF.NUM:	.BLKB 4		;# OF LIVES LEFT
				;REQUEST A NEW LIFE 0>NEW,+==>WAIT,-==>IGNORE
LF.DRA:	.BLKB 1			;DRONE ALIVE
LF.PLA:	.BLKB 1			;PLAYERS ALIVE
LF.DRN:	.BLKB 1		;ORIGINAL # OF DRONES
		;---
		; LAUNCH, DOGAME
LA.CNT: .BLKB 1 ;TIMER FOR GOOD PLAYERS
				;---
				;LEVELS
LV.CUR:	.BLKB 1			;CURRENT LEVEL
LV.CNT:	.BLKB 1			;COUNT LEVELS FOR EXPERIENCE POINTS
LV.PNM:	.BLKB 1			;PLAYER LEFT ALIVE
				;---
				;DRAGON
DG.VX:	.BLKB 1			;VELOCITY X
DG.VY:	.BLKB 1			;VELOCITY Y
DG.FLP:	.BLKB 1			;FLIP MASK FOR STAMPS
DG.DRX:	.BLKB 1			;FACING DIRECTION X (0 LEFT, FF RIGHT)
DG.DRY:	.BLKB 1			;FACING DIRECTION Y (0 DOWN, FF UP)
DG.PLN:	.BLKB 1			;PLAYER TO AIM AT
DG.PSX:	.BLKB 1			;POSITION, X
DG.PSY:	.BLKB 1			;POSITION, Y
DG.STM:	.BLKB 1			;SEQUENCE TIMER
DG.SPT:	.BLKB 1			;SEQUENCE POINTER
DG.SBS:	.BLKB 1			;SEQUENCE BASE
DG.SPC:	.BLKB 1			;SEQUENCE PICTURE
DG.PHS:	.BLKB 1			;PHASE
DG.TRN:	.BLKB 1			;TURNING (<>0)
DG.COM:	.BLKB 1			;COMLINE ONOP,1 PREPARE,80 LAUNCH ASAP

DGXDIS:	.BLKB 8			;VIDEO X DISP
DGYDIS:	.BLKB 8			;VIDEO Y DISP
DGPDIS:	.BLKB 8			;VIDEO PICTURE




	.MACRO .ASCPC ...1
	.NCHR ...2,<'...1'>
	.IRPC ...3,<'...1'>
	...2=...2-1
	...4=''...3'+0A&3F
	.IF LT,''...3'-40
	.IF EQ,''...3'-20
	...4=0
	.IFF
	...4=''...3'+11&3F
	.ENDC
	.ENDC
	...4=...4+...4
	.IIF EQ,...2,...4=...4+1
	.BYTE ...4
	.ENDM
	.ENDM
	.MACRO .ASCPF ...1


	.NCHR ...2,<'...1'>
	.IRPC ...3,<'...1'>
	...2=...2-1
	...4=''...3'+0A
	.IF LT,''...3'-40
	.IF EQ,''...3'-20
	...4=0
	.IFF
	...4=''...3'+11
	.ENDC
	.ENDC
	...4=...4+...4
	.IIF EQ,...2,...4=...4+1
	.BYTE ...4
	.ENDM
	.ENDM
                                                     